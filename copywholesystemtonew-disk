## Need to make a new bootable Freebsd install from an existing install on zfs:-
## So making an exact copy of whole working system to new hard disk that is bootable on existing computer or another with a few changes to some files…… 
## check fstab,rc.conf,loader.conf,sanoid.conf,hostname,hosts,sysctl.conf and make suitable for new system or computer after rsync is done!!!!

## Existing zpool is called freebsd
## New zpool is going to be called freebsd-1
## All commands as root user or you add sudo or doas to all commands.
## First install new hard disk or nvme in comuter.
## Partition disk, and identify the target disk.
gpart show or gpart show -l
gpart destroy -F /dev/nda1  ## set to your target disk
gpart create -s gpt /dev/nda1
gpart add -t efi -s 260M /dev/nda1
gpart add -t freebsd-zfs -s 928G /dev/nda1  ## adjust as needed
gpart add -t freebsd-swap -s 2048M /dev/nda1  ## adjust as needed or none for large ram

gpart modify -l efiboot-1 -i1 /dev/nda1 ## add a disk label
gpart modify -l zfsblue-1 -i2 /dev/nda1 ## add disk label
gpart modify -l swap-blue -i3 /dev/nda1 ## add a disk label

sudo newfs_msdos -F 32 -c 1 -L "efiboot-1" /dev/nda1p1  ## Format the efi boot partition with label

## If using zfs raid do above for every disk in new zpool, but with different labels for each disk.

## Create the zpool freebsd-1
zpool create  -o ashift=12 -o autotrim=on -O acltype=posixacl -O compression=lz4  -O dnodesize=auto -O relatime=on -O atime=off -O xattr=sa freebsd-1  /dev/gpt/zfsblue-1

## If using raid add extra disk partitions and mirror or raidz or whatever.
## Then export the new zpool 
zpool export freebsd-1
## Then re import freebsd-1 with mountpoint /mnt
zpool import -R /mnt freebsd-1
## check using zfs list for correct mountpoint

## Create all need datasets and file systems and directories needed.
zfs create -o mountpoint=none freebsd/ROOT
zfs create -o mountpoint=/ freebsd/ROOT/default
zfs create -o mountpoint=/usr freebsd/usr
zfs create freebsd/usr/ports
zfs create -o mountpoint=/tmp freebsd/tmp
zfs create -o mountpoint=/var freebsd/var
zfs create freebsd/var/crash
zfs create freebsd/var/log
zfs create freebsd/var/mail
zfs create freebsd/var/tmp
zfs create -o mountpoint=/home freebsd/home
zfs create freebsd/home/mark
zfs create freebsd/home/mark/Music
## Carry on as needed for home users and datasets.
mkdir -p /mnt/boot/efi
## Mount the /boot/efi partition and copy whole system…
mount -t msdos /dev/gpt/efiboot-1 /mnt/boot/efi
## check file system pointpoints with "df -Th" and "zfs list"
## Copy whole system to new zpool freebsd-1
rsync -av --exclude "/mnt" / /mnt/
## Change /mnt/etc/fstab to suit new mountpoints and change swap if used.
/dev/gpt/efiboot-1  /boot/efi msdosfs rw 2 2
## remove /mnt/boot/zfs/zpool.cache so that system does not look for old zpools
rm  /mnt/boot/zfs/*
## Set bootfilesystem so that it boots.
zpool set bootfs=freebsd-1/ROOT/default freebsd-1
zpool get bootfs
## check fstab,rc.conf,loader.conf,sanoid.conf,hostname,hosts,sysctl.conf and make suitable for new system or computer!!!!
## reboot system to new disk to test it out.
## When in new system you can add boot options to the BIOS.
efibootmgr	  -a   -c   -l	 /boot/efi/efi/freebsd/loader.efi   -L FreeBSD-14.2
## you can redo boot loader if needed.
cp /boot/loader.efi /boot/efi/efi/boot/bootx64.efi
## Hope thats all
